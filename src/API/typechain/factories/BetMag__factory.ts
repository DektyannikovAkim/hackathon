/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BetMag, BetMagInterface } from "../BetMag";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "betFee_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeWallet_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "betsAmountEdge_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "string",
            name: "team0",
            type: "string",
          },
          {
            internalType: "string",
            name: "team1",
            type: "string",
          },
          {
            internalType: "enum BetMag.Result",
            name: "result",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "finishTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolWin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolLose",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolTie",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBet",
            type: "uint256",
          },
        ],
        internalType: "struct BetMag.Match[]",
        name: "matches_",
        type: "tuple[]",
      },
    ],
    name: "addMatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchId_",
        type: "string",
      },
      {
        internalType: "enum BetMag.Result",
        name: "result_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "bet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "betFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchId_",
        type: "string",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMatches",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "string",
            name: "team0",
            type: "string",
          },
          {
            internalType: "string",
            name: "team1",
            type: "string",
          },
          {
            internalType: "enum BetMag.Result",
            name: "result",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "finishTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolWin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolLose",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolTie",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBet",
            type: "uint256",
          },
        ],
        internalType: "struct BetMag.Match[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchId_",
        type: "string",
      },
      {
        internalType: "enum BetMag.Result",
        name: "result_",
        type: "uint8",
      },
    ],
    name: "getBetRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "matchId_",
        type: "string",
      },
    ],
    name: "getUserBets",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "matchId",
            type: "string",
          },
          {
            internalType: "enum BetMag.Result",
            name: "result",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct BetMag.BetInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserBetsMatches",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "matchIds_",
        type: "string[]",
      },
      {
        internalType: "enum BetMag.Result[]",
        name: "results_",
        type: "uint8[]",
      },
    ],
    name: "loadResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "matchesCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeWallet",
        type: "address",
      },
    ],
    name: "setFeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawStables",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029d6380380620029d68339810160408190526200003491620000f4565b6200003f336200008b565b600180546001600160a01b039687166001600160a01b0319918216179091556008949094556009805493861693851693909317909255600a55600b80549190931691161790556200015c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000f157600080fd5b50565b600080600080600060a086880312156200010d57600080fd5b85516200011a81620000db565b6020870151604088015191965094506200013481620000db565b6060870151608088015191945092506200014e81620000db565b809150509295509295909350565b61286a806200016c6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806390d49b9d116100a2578063c17c5a4511610071578063c17c5a4514610234578063f25f4b5614610249578063f2fde38b1461025c578063f3fe12c91461026f578063fc0c546a1461028257600080fd5b806390d49b9d146101db578063a582de4d146101ee578063bd39ead01461020e578063bf4653f31461022157600080fd5b80637adbf973116100e95780637adbf973146101675780637d24ffb81461017a578063841e6ce91461018d5780638d21424a146101965780638da5cb5b146101b657600080fd5b806339ad95d61461011b5780634aee7ede146101305780635ba84fcb1461014c578063715018a61461015f575b600080fd5b61012e610129366004611d1a565b610295565b005b61013960025481565b6040519081526020015b60405180910390f35b61012e61015a366004611e8f565b6102e2565b61012e610409565b61012e610175366004611f7f565b61043f565b61012e610188366004611f9a565b61048b565b61013960085481565b6101a96101a4366004611f7f565b61090b565b604051610143919061204c565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610143565b61012e6101e9366004611f7f565b6109fa565b6102016101fc3660046120ae565b610a46565b604051610143919061212a565b61013961021c3660046121c8565b610bcb565b61012e61022f36600461221a565b610f34565b61023c611042565b604051610143919061228f565b6009546101c3906001600160a01b031681565b61012e61026a366004611f7f565b6112bd565b61012e61027d366004612368565b611355565b6001546101c3906001600160a01b031681565b6000546001600160a01b031633146102c85760405162461bcd60e51b81526004016102bf9061239d565b60405180910390fd5b6001546102df906001600160a01b031633836118cc565b50565b600b546001600160a01b031633146103295760405162461bcd60e51b815260206004820152600a6024820152694e6f74206f7261636c6560b01b60448201526064016102bf565b805182511461036e5760405162461bcd60e51b8152602060048201526011602482015270139bdd0818dbdc9c9958dd081a5b9c1d5d607a1b60448201526064016102bf565b60005b82518110156104045781818151811061038c5761038c6123d2565b602002602001015160038483815181106103a8576103a86123d2565b60200260200101516040516103bd91906123e8565b908152602001604051809103902060030160006101000a81548160ff021916908360038111156103ef576103ef6120f2565b02179055506103fd8161241a565b9050610371565b505050565b6000546001600160a01b031633146104335760405162461bcd60e51b81526004016102bf9061239d565b61043d600061192f565b565b6000546001600160a01b031633146104695760405162461bcd60e51b81526004016102bf9061239d565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600060038460405161049d91906123e8565b9081526020016040518091039020604051806101200160405290816000820180546104c790612433565b80601f01602080910402602001604051908101604052809291908181526020018280546104f390612433565b80156105405780601f1061051557610100808354040283529160200191610540565b820191906000526020600020905b81548152906001019060200180831161052357829003601f168201915b5050505050815260200160018201805461055990612433565b80601f016020809104026020016040519081016040528092919081815260200182805461058590612433565b80156105d25780601f106105a7576101008083540402835291602001916105d2565b820191906000526020600020905b8154815290600101906020018083116105b557829003601f168201915b505050505081526020016002820180546105eb90612433565b80601f016020809104026020016040519081016040528092919081815260200182805461061790612433565b80156106645780601f1061063957610100808354040283529160200191610664565b820191906000526020600020905b81548152906001019060200180831161064757829003601f168201915b505050918352505060038281015460209092019160ff169081111561068b5761068b6120f2565b600381111561069c5761069c6120f2565b8152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509050428160800151116107115760405162461bcd60e51b815260206004820152600760248201526624b99037bb32b960c91b60448201526064016102bf565b8181610100015110156107505760405162461bcd60e51b815260206004820152600760248201526613585e0818995d60ca1b60448201526064016102bf565b600154610768906001600160a01b031633308561197f565b6000610773836119b7565b905060006040518060a0016040528087815260200186600381111561079a5761079a6120f2565b81526020016107a98888610bcb565b815260208082018590526000604092830181905233815260059091528190209051919250906107d99088906123e8565b90815260405160209181900382019020805460018101825560009182529190208251839260050290910190819061081090826124bb565b50602082015160018083018054909160ff1990911690836003811115610838576108386120f2565b02179055506040828101516002830155606083015160038301556080909201516004909101805460ff1916911515919091179055336000908152600560205281902090516108879088906123e8565b908152604051908190036020019020546001036108c957336000908152600660209081526040822080546001810182559083529120016108c787826124bb565b505b6108d4868684611a06565b6007866040516108e491906123e8565b9081526020016040518091039020600081546108ff9061241a565b90915550505050505050565b6001600160a01b0381166000908152600660209081526040808320805482518185028101850190935280835260609492939192909184015b828210156109ef57838290600052602060002001805461096290612433565b80601f016020809104026020016040519081016040528092919081815260200182805461098e90612433565b80156109db5780601f106109b0576101008083540402835291602001916109db565b820191906000526020600020905b8154815290600101906020018083116109be57829003601f168201915b505050505081526020019060010190610943565b505050509050919050565b6000546001600160a01b03163314610a245760405162461bcd60e51b81526004016102bf9061239d565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526005602052604090819020905160609190610a719084906123e8565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610bbe57838290600052602060002090600502016040518060a0016040529081600082018054610ad290612433565b80601f0160208091040260200160405190810160405280929190818152602001828054610afe90612433565b8015610b4b5780601f10610b2057610100808354040283529160200191610b4b565b820191906000526020600020905b815481529060010190602001808311610b2e57829003601f168201915b5050509183525050600182015460209091019060ff166003811115610b7257610b726120f2565b6003811115610b8357610b836120f2565b815260028201546020808301919091526003830154604083015260049092015460ff1615156060909101529082526001929092019101610a9f565b5050505090505b92915050565b600080600384604051610bde91906123e8565b908152602001604051809103902060405180610120016040529081600082018054610c0890612433565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3490612433565b8015610c815780601f10610c5657610100808354040283529160200191610c81565b820191906000526020600020905b815481529060010190602001808311610c6457829003601f168201915b50505050508152602001600182018054610c9a90612433565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc690612433565b8015610d135780601f10610ce857610100808354040283529160200191610d13565b820191906000526020600020905b815481529060010190602001808311610cf657829003601f168201915b50505050508152602001600282018054610d2c90612433565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5890612433565b8015610da55780601f10610d7a57610100808354040283529160200191610da5565b820191906000526020600020905b815481529060010190602001808311610d8857829003601f168201915b505050918352505060038281015460209092019160ff1690811115610dcc57610dcc6120f2565b6003811115610ddd57610ddd6120f2565b8152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509050600080600a54600787604051610e2b91906123e8565b9081526020016040518091039020541015610e6b57612710610e57670de0b6b3a7640000613a9861257b565b610e61919061259a565b9350505050610bc5565b6001856003811115610e7f57610e7f6120f2565b03610ea1575060a082015160e083015160c0840151610e9e91906125bc565b91505b6003856003811115610eb557610eb56120f2565b03610ed7575060e082015160a083015160c0840151610ed491906125bc565b91505b6002856003811115610eeb57610eeb6120f2565b03610f0d575060c082015160e083015160a0840151610f0a91906125bc565b91505b80610f20670de0b6b3a76400008461257b565b610f2a919061259a565b9695505050505050565b6000546001600160a01b03163314610f5e5760405162461bcd60e51b81526004016102bf9061239d565b60005b81811015610404576004838383818110610f7d57610f7d6123d2565b9050602002810190610f8f91906125d4565b815460018101835560009283526020909220909160090201610fb18282612738565b5050828282818110610fc557610fc56123d2565b9050602002810190610fd791906125d4565b6003848484818110610feb57610feb6123d2565b9050602002810190610ffd91906125d4565b61100790806125eb565b6040516110159291906127d8565b90815260405190819003602001902061102e8282612738565b505060028054600190810190915501610f61565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156112b457838290600052602060002090600902016040518061012001604052908160008201805461109a90612433565b80601f01602080910402602001604051908101604052809291908181526020018280546110c690612433565b80156111135780601f106110e857610100808354040283529160200191611113565b820191906000526020600020905b8154815290600101906020018083116110f657829003601f168201915b5050505050815260200160018201805461112c90612433565b80601f016020809104026020016040519081016040528092919081815260200182805461115890612433565b80156111a55780601f1061117a576101008083540402835291602001916111a5565b820191906000526020600020905b81548152906001019060200180831161118857829003601f168201915b505050505081526020016002820180546111be90612433565b80601f01602080910402602001604051908101604052809291908181526020018280546111ea90612433565b80156112375780601f1061120c57610100808354040283529160200191611237565b820191906000526020600020905b81548152906001019060200180831161121a57829003601f168201915b505050918352505060038281015460209092019160ff169081111561125e5761125e6120f2565b600381111561126f5761126f6120f2565b81526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505081526020019060010190611066565b50505050905090565b6000546001600160a01b031633146112e75760405162461bcd60e51b81526004016102bf9061239d565b6001600160a01b03811661134c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bf565b6102df8161192f565b3360009081526005602052604080822090516113729084906123e8565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156114bf57838290600052602060002090600502016040518060a00160405290816000820180546113d390612433565b80601f01602080910402602001604051908101604052809291908181526020018280546113ff90612433565b801561144c5780601f106114215761010080835404028352916020019161144c565b820191906000526020600020905b81548152906001019060200180831161142f57829003601f168201915b5050509183525050600182015460209091019060ff166003811115611473576114736120f2565b6003811115611484576114846120f2565b815260028201546020808301919091526003830154604083015260049092015460ff16151560609091015290825260019290920191016113a0565b50505050905060006003836040516114d791906123e8565b90815260200160405180910390206040518061012001604052908160008201805461150190612433565b80601f016020809104026020016040519081016040528092919081815260200182805461152d90612433565b801561157a5780601f1061154f5761010080835404028352916020019161157a565b820191906000526020600020905b81548152906001019060200180831161155d57829003601f168201915b5050505050815260200160018201805461159390612433565b80601f01602080910402602001604051908101604052809291908181526020018280546115bf90612433565b801561160c5780601f106115e15761010080835404028352916020019161160c565b820191906000526020600020905b8154815290600101906020018083116115ef57829003601f168201915b5050505050815260200160028201805461162590612433565b80601f016020809104026020016040519081016040528092919081815260200182805461165190612433565b801561169e5780601f106116735761010080835404028352916020019161169e565b820191906000526020600020905b81548152906001019060200180831161168157829003601f168201915b505050918352505060038281015460209092019160ff16908111156116c5576116c56120f2565b60038111156116d6576116d66120f2565b815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050905042816080015111156117515760405162461bcd60e51b815260206004820152600c60248201526b139bdd08199a5b9a5cda195960a21b60448201526064016102bf565b6000805b835181101561187057838181518110611770576117706123d2565b602002602001015160200151600381111561178d5761178d6120f2565b836060015160038111156117a3576117a36120f2565b1480156117cb57508381815181106117bd576117bd6123d2565b602002602001015160800151155b156118605760018482815181106117e4576117e46123d2565b60200260200101516080019015159081151581525050670de0b6b3a7640000848281518110611815576118156123d2565b602002602001015160400151858381518110611833576118336123d2565b602002602001015160600151611849919061257b565b611853919061259a565b61185d90836125bc565b91505b6118698161241a565b9050611755565b50600081116118af5760405162461bcd60e51b815260206004820152600b60248201526a2737ba3434b733903bb7b760a91b60448201526064016102bf565b6001546118c6906001600160a01b031633836118cc565b50505050565b6040516001600160a01b03831660248201526044810182905261040490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611ac7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526118c69085906323b872dd60e01b906084016118f8565b600080612710600854846119cb919061257b565b6119d5919061259a565b6009546001549192506119f5916001600160a01b039081169116836118cc565b6119ff81846127e8565b9392505050565b6000600384604051611a1891906123e8565b90815260405190819003602001902090506001836003811115611a3d57611a3d6120f2565b03611a5c5781816005016000828254611a5691906125bc565b90915550505b6003836003811115611a7057611a706120f2565b03611a8f5781816007016000828254611a8991906125bc565b90915550505b6002836003811115611aa357611aa36120f2565b036118c65781816006016000828254611abc91906125bc565b909155505050505050565b6000611b1c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b999092919063ffffffff16565b8051909150156104045780806020019051810190611b3a91906127ff565b6104045760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102bf565b6060611ba88484600085611bb0565b949350505050565b606082471015611c115760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102bf565b6001600160a01b0385163b611c685760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102bf565b600080866001600160a01b03168587604051611c8491906123e8565b60006040518083038185875af1925050503d8060008114611cc1576040519150601f19603f3d011682016040523d82523d6000602084013e611cc6565b606091505b5091509150611cd6828286611ce1565b979650505050505050565b60608315611cf05750816119ff565b825115611d005782518084602001fd5b8160405162461bcd60e51b81526004016102bf9190612821565b600060208284031215611d2c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d7257611d72611d33565b604052919050565b600067ffffffffffffffff821115611d9457611d94611d33565b5060051b60200190565b600082601f830112611daf57600080fd5b813567ffffffffffffffff811115611dc957611dc9611d33565b611ddc601f8201601f1916602001611d49565b818152846020838601011115611df157600080fd5b816020850160208301376000918101602001919091529392505050565b600481106102df57600080fd5b600082601f830112611e2c57600080fd5b81356020611e41611e3c83611d7a565b611d49565b82815260059290921b84018101918181019086841115611e6057600080fd5b8286015b84811015611e84578035611e7781611e0e565b8352918301918301611e64565b509695505050505050565b60008060408385031215611ea257600080fd5b823567ffffffffffffffff80821115611eba57600080fd5b818501915085601f830112611ece57600080fd5b81356020611ede611e3c83611d7a565b82815260059290921b84018101918181019089841115611efd57600080fd5b8286015b84811015611f3557803586811115611f195760008081fd5b611f278c86838b0101611d9e565b845250918301918301611f01565b5096505086013592505080821115611f4c57600080fd5b50611f5985828601611e1b565b9150509250929050565b80356001600160a01b0381168114611f7a57600080fd5b919050565b600060208284031215611f9157600080fd5b6119ff82611f63565b600080600060608486031215611faf57600080fd5b833567ffffffffffffffff811115611fc657600080fd5b611fd286828701611d9e565b9350506020840135611fe381611e0e565b929592945050506040919091013590565b60005b8381101561200f578181015183820152602001611ff7565b838111156118c65750506000910152565b60008151808452612038816020860160208601611ff4565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156120a157603f1988860301845261208f858351612020565b94509285019290850190600101612073565b5092979650505050505050565b600080604083850312156120c157600080fd5b6120ca83611f63565b9150602083013567ffffffffffffffff8111156120e657600080fd5b611f5985828601611d9e565b634e487b7160e01b600052602160045260246000fd5b6004811061212657634e487b7160e01b600052602160045260246000fd5b9052565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156121ba57603f19898403018552815160a0815181865261217782870182612020565b9150508882015161218a8a870182612108565b50818801518589015260608083015190860152608091820151151591909401529386019390860190600101612151565b509098975050505050505050565b600080604083850312156121db57600080fd5b823567ffffffffffffffff8111156121f257600080fd5b6121fe85828601611d9e565b925050602083013561220f81611e0e565b809150509250929050565b6000806020838503121561222d57600080fd5b823567ffffffffffffffff8082111561224557600080fd5b818501915085601f83011261225957600080fd5b81358181111561226857600080fd5b8660208260051b850101111561227d57600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156121ba57603f19898403018552815161012081518186526122dd82870182612020565b915050888201518582038a8701526122f58282612020565b915050878201518582038987015261230d8282612020565b91505060608083015161232282880182612108565b50506080828101519086015260a0808301519086015260c0808301519086015260e0808301519086015261010091820151919094015293860193908601906001016122b6565b60006020828403121561237a57600080fd5b813567ffffffffffffffff81111561239157600080fd5b611ba884828501611d9e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600082516123fa818460208701611ff4565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60006001820161242c5761242c612404565b5060010190565b600181811c9082168061244757607f821691505b60208210810361246757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561040457600081815260208120601f850160051c810160208610156124945750805b601f850160051c820191505b818110156124b3578281556001016124a0565b505050505050565b815167ffffffffffffffff8111156124d5576124d5611d33565b6124e9816124e38454612433565b8461246d565b602080601f83116001811461251e57600084156125065750858301515b600019600386901b1c1916600185901b1785556124b3565b600085815260208120601f198616915b8281101561254d5788860151825594840194600190910190840161252e565b508582101561256b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600081600019048311821515161561259557612595612404565b500290565b6000826125b757634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156125cf576125cf612404565b500190565b6000823561011e198336030181126123fa57600080fd5b6000808335601e1984360301811261260257600080fd5b83018035915067ffffffffffffffff82111561261d57600080fd5b60200191503681900382131561263257600080fd5b9250929050565b67ffffffffffffffff83111561265157612651611d33565b6126658361265f8354612433565b8361246d565b6000601f84116001811461269957600085156126815750838201355b600019600387901b1c1916600186901b1783556126f3565b600083815260209020601f19861690835b828110156126ca57868501358255602094850194600190920191016126aa565b50868210156126e75760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008135610bc581611e0e565b6004821061272557634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b61274282836125eb565b61274d818385612639565b505061275c60208301836125eb565b61276a818360018601612639565b505061277960408301836125eb565b612787818360028601612639565b50506127a1612798606084016126fa565b60038301612707565b6080820135600482015560a0820135600582015560c0820135600682015560e0820135600782015561010082013560088201555050565b8183823760009101908152919050565b6000828210156127fa576127fa612404565b500390565b60006020828403121561281157600080fd5b815180151581146119ff57600080fd5b6020815260006119ff602083018461202056fea26469706673582212208f23575757e99d9adf8b1bbe2dd74cf4a1388cb1312cd5390632cc31ac32a0c964736f6c634300080f0033";

export class BetMag__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    token_: string,
    betFee_: BigNumberish,
    feeWallet_: string,
    betsAmountEdge_: BigNumberish,
    oracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BetMag> {
    return super.deploy(
      token_,
      betFee_,
      feeWallet_,
      betsAmountEdge_,
      oracle_,
      overrides || {}
    ) as Promise<BetMag>;
  }
  getDeployTransaction(
    token_: string,
    betFee_: BigNumberish,
    feeWallet_: string,
    betsAmountEdge_: BigNumberish,
    oracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      betFee_,
      feeWallet_,
      betsAmountEdge_,
      oracle_,
      overrides || {}
    );
  }
  attach(address: string): BetMag {
    return super.attach(address) as BetMag;
  }
  connect(signer: Signer): BetMag__factory {
    return super.connect(signer) as BetMag__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BetMagInterface {
    return new utils.Interface(_abi) as BetMagInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BetMag {
    return new Contract(address, _abi, signerOrProvider) as BetMag;
  }
}
