/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BetMag, BetMagInterface } from "../BetMag";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "betFee_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeWallet_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "team0",
            type: "string",
          },
          {
            internalType: "string",
            name: "team1",
            type: "string",
          },
          {
            internalType: "enum BetMag.Result",
            name: "result",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "finishTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolWin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolLose",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolTie",
            type: "uint256",
          },
        ],
        internalType: "struct BetMag.Match[]",
        name: "matches_",
        type: "tuple[]",
      },
    ],
    name: "addMatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId_",
        type: "uint256",
      },
      {
        internalType: "enum BetMag.Result",
        name: "result_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "bet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "betFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId_",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMatches",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "team0",
            type: "string",
          },
          {
            internalType: "string",
            name: "team1",
            type: "string",
          },
          {
            internalType: "enum BetMag.Result",
            name: "result",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "finishTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolWin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolLose",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolTie",
            type: "uint256",
          },
        ],
        internalType: "struct BetMag.Match[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId_",
        type: "uint256",
      },
      {
        internalType: "enum BetMag.Result",
        name: "result_",
        type: "uint8",
      },
    ],
    name: "getBetRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "matchId_",
        type: "uint256",
      },
    ],
    name: "getUserBets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "matchId",
            type: "uint256",
          },
          {
            internalType: "enum BetMag.Result",
            name: "result",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct BetMag.BetInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserBetsMatches",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchesCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeWallet",
        type: "address",
      },
    ],
    name: "setFeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eb338038062001eb38339810160408190526200003491620000e0565b6200003f3362000077565b600180546001600160a01b039485166001600160a01b0319918216179091556007929092556008805491909316911617905562000128565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000dd57600080fd5b50565b600080600060608486031215620000f657600080fd5b83516200010381620000c7565b6020850151604086015191945092506200011d81620000c7565b809150509250925092565b611d7b80620001386000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806390d49b9d11610097578063e16d9bd511610066578063e16d9bd5146101ef578063f25f4b5614610202578063f2fde38b14610215578063fc0c546a1461022857600080fd5b806390d49b9d14610194578063c17c5a45146101a7578063cd811c25146101bc578063cf87935c146101dc57600080fd5b806377da5942116100d357806377da594214610133578063841e6ce9146101465780638d21424a1461014f5780638da5cb5b1461016f57600080fd5b8063379607f5146100fa5780634aee7ede1461010f578063715018a61461012b575b600080fd5b61010d610108366004611571565b61023b565b005b61011860025481565b6040519081526020015b60405180910390f35b61010d610677565b61010d61014136600461158a565b6106ad565b61011860075481565b61016261015d36600461161b565b610790565b6040516101229190611636565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610122565b61010d6101a236600461161b565b6107fc565b6101af610848565b604051610122919061170a565b6101cf6101ca3660046117ca565b610a26565b60405161012291906117f4565b61010d6101ea36600461187a565b610b0f565b6101186101fd3660046118b2565b610e35565b60085461017c906001600160a01b031681565b61010d61022336600461161b565b61109d565b60015461017c906001600160a01b031681565b336000908152600560209081526040808320848452825280832080548251818502810185019093528083529192909190849084015b8282101561030d57838290600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900460ff1660038111156102c1576102c16116d2565b60038111156102d2576102d26116d2565b815260028201546020808301919091526003830154604083015260049092015460ff1615156060909101529082526001929092019101610270565b5050505090506000600360008481526020019081526020016000206040518060e0016040529081600082018054610343906118e2565b80601f016020809104026020016040519081016040528092919081815260200182805461036f906118e2565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b505050505081526020016001820180546103d5906118e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610401906118e2565b801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050509183525050600282015460209091019060ff166003811115610475576104756116d2565b6003811115610486576104866116d2565b8152602001600382015481526020016004820154815260200160058201548152602001600682015481525050905042816060015111156104fc5760405162461bcd60e51b815260206004820152600c60248201526b139bdd08199a5b9a5cda195960a21b60448201526064015b60405180910390fd5b6000805b835181101561061b5783818151811061051b5761051b61191c565b6020026020010151602001516003811115610538576105386116d2565b8360400151600381111561054e5761054e6116d2565b14801561057657508381815181106105685761056861191c565b602002602001015160800151155b1561060b57600184828151811061058f5761058f61191c565b60200260200101516080019015159081151581525050670de0b6b3a76400008482815181106105c0576105c061191c565b6020026020010151604001518583815181106105de576105de61191c565b6020026020010151606001516105f49190611948565b6105fe9190611967565b6106089083611989565b91505b610614816119a1565b9050610500565b506000811161065a5760405162461bcd60e51b815260206004820152600b60248201526a2737ba3434b733903bb7b760a91b60448201526064016104f3565b600154610671906001600160a01b03163383611138565b50505050565b6000546001600160a01b031633146106a15760405162461bcd60e51b81526004016104f3906119ba565b6106ab600061119b565b565b6000546001600160a01b031633146106d75760405162461bcd60e51b81526004016104f3906119ba565b60005b8181101561078b578282828181106106f4576106f461191c565b905060200281019061070691906119ef565b60046002548154811061071b5761071b61191c565b906000526020600020906007020181816107359190611bbe565b90505082828281811061074a5761074a61191c565b905060200281019061075c91906119ef565b60025460009081526003602052604090206107778282611bbe565b5050600280546001908101909155016106da565b505050565b6001600160a01b0381166000908152600660209081526040918290208054835181840281018401909452808452606093928301828280156107f057602002820191906000526020600020905b8154815260200190600101908083116107dc575b50505050509050919050565b6000546001600160a01b031633146108265760405162461bcd60e51b81526004016104f3906119ba565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015610a1d57838290600052602060002090600702016040518060e001604052908160008201805461089f906118e2565b80601f01602080910402602001604051908101604052809291908181526020018280546108cb906118e2565b80156109185780601f106108ed57610100808354040283529160200191610918565b820191906000526020600020905b8154815290600101906020018083116108fb57829003601f168201915b50505050508152602001600182018054610931906118e2565b80601f016020809104026020016040519081016040528092919081815260200182805461095d906118e2565b80156109aa5780601f1061097f576101008083540402835291602001916109aa565b820191906000526020600020905b81548152906001019060200180831161098d57829003601f168201915b5050509183525050600282015460209091019060ff1660038111156109d1576109d16116d2565b60038111156109e2576109e26116d2565b81526020016003820154815260200160048201548152602001600582015481526020016006820154815250508152602001906001019061086c565b50505050905090565b6001600160a01b03821660009081526005602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b82821015610b0357838290600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900460ff166003811115610ab757610ab76116d2565b6003811115610ac857610ac86116d2565b815260028201546020808301919091526003830154604083015260049092015460ff1615156060909101529082526001929092019101610a66565b50505050905092915050565b600083815260036020526040808220815160e08101909252805482908290610b36906118e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b62906118e2565b8015610baf5780601f10610b8457610100808354040283529160200191610baf565b820191906000526020600020905b815481529060010190602001808311610b9257829003601f168201915b50505050508152602001600182018054610bc8906118e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf4906118e2565b8015610c415780601f10610c1657610100808354040283529160200191610c41565b820191906000526020600020905b815481529060010190602001808311610c2457829003601f168201915b5050509183525050600282015460209091019060ff166003811115610c6857610c686116d2565b6003811115610c7957610c796116d2565b8152602001600382015481526020016004820154815260200160058201548152602001600682015481525050905042816060015111610ce45760405162461bcd60e51b815260206004820152600760248201526624b99037bb32b960c91b60448201526064016104f3565b600154610cfc906001600160a01b03163330856111eb565b6000610d0783611223565b905060006040518060a00160405280878152602001866003811115610d2e57610d2e6116d2565b8152602001610d3d8888610e35565b815260208082018590526000604092830181905233815260058083528382208b8352835292812080546001818101835591835291839020855192909402909301908155908301518183018054949550859492939192909160ff1990911690836003811115610dad57610dad6116d2565b02179055506040828101516002830155606083015160038301556080909201516004909101805460ff19169115159190911790553360009081526005602090815282822089835290522054600103610e2257336000908152600660209081526040822080546001810182559083529120018690555b610e2d868684611272565b505050505050565b600082815260036020526040808220815160e0810190925280548392919082908290610e60906118e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8c906118e2565b8015610ed95780601f10610eae57610100808354040283529160200191610ed9565b820191906000526020600020905b815481529060010190602001808311610ebc57829003601f168201915b50505050508152602001600182018054610ef2906118e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1e906118e2565b8015610f6b5780601f10610f4057610100808354040283529160200191610f6b565b820191906000526020600020905b815481529060010190602001808311610f4e57829003601f168201915b5050509183525050600282015460209091019060ff166003811115610f9257610f926116d2565b6003811115610fa357610fa36116d2565b815260038201546020820152600482015460408201526005820154606082015260069091015460809091015290506000806001856003811115610fe857610fe86116d2565b0361100a5750608082015160c083015160a08401516110079190611989565b91505b600385600381111561101e5761101e6116d2565b03611040575060c0820151608083015160a084015161103d9190611989565b91505b6002856003811115611054576110546116d2565b03611076575060a082015160c083015160808401516110739190611989565b91505b80611089670de0b6b3a764000084611948565b6110939190611967565b9695505050505050565b6000546001600160a01b031633146110c75760405162461bcd60e51b81526004016104f3906119ba565b6001600160a01b03811661112c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f3565b6111358161119b565b50565b6040516001600160a01b03831660248201526044810182905261078b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261131e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526106719085906323b872dd60e01b90608401611164565b600080612710600754846112379190611948565b6112419190611967565b600854600154919250611261916001600160a01b03908116911683611138565b61126b8184611ce7565b9392505050565b60008381526003602052604090206001836003811115611294576112946116d2565b036112b357818160040160008282546112ad9190611989565b90915550505b60038360038111156112c7576112c76116d2565b036112e657818160060160008282546112e09190611989565b90915550505b60028360038111156112fa576112fa6116d2565b0361067157818160050160008282546113139190611989565b909155505050505050565b6000611373826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113f09092919063ffffffff16565b80519091501561078b57808060200190518101906113919190611cfe565b61078b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f3565b60606113ff8484600085611407565b949350505050565b6060824710156114685760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104f3565b6001600160a01b0385163b6114bf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f3565b600080866001600160a01b031685876040516114db9190611d20565b60006040518083038185875af1925050503d8060008114611518576040519150601f19603f3d011682016040523d82523d6000602084013e61151d565b606091505b509150915061152d828286611538565b979650505050505050565b6060831561154757508161126b565b8251156115575782518084602001fd5b8160405162461bcd60e51b81526004016104f39190611d32565b60006020828403121561158357600080fd5b5035919050565b6000806020838503121561159d57600080fd5b823567ffffffffffffffff808211156115b557600080fd5b818501915085601f8301126115c957600080fd5b8135818111156115d857600080fd5b8660208260051b85010111156115ed57600080fd5b60209290920196919550909350505050565b80356001600160a01b038116811461161657600080fd5b919050565b60006020828403121561162d57600080fd5b61126b826115ff565b6020808252825182820181905260009190848201906040850190845b8181101561166e57835183529284019291840191600101611652565b50909695505050505050565b60005b8381101561169557818101518382015260200161167d565b838111156106715750506000910152565b600081518084526116be81602086016020860161167a565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6004811061170657634e487b7160e01b600052602160045260246000fd5b9052565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156117bc57603f19898403018552815160e08151818652611757828701826116a6565b915050888201518582038a87015261176f82826116a6565b91505087820151611782898701826116e8565b50606082810151908601526080808301519086015260a0808301519086015260c09182015191909401529386019390860190600101611731565b509098975050505050505050565b600080604083850312156117dd57600080fd5b6117e6836115ff565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b82811015611860578151805185528681015161182f888701826116e8565b5080860151858701526060808201519086015260809081015115159085015260a09093019290850190600101611811565b5091979650505050505050565b6004811061113557600080fd5b60008060006060848603121561188f57600080fd5b8335925060208401356118a18161186d565b929592945050506040919091013590565b600080604083850312156118c557600080fd5b8235915060208301356118d78161186d565b809150509250929050565b600181811c908216806118f657607f821691505b60208210810361191657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561196257611962611932565b500290565b60008261198457634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561199c5761199c611932565b500190565b6000600182016119b3576119b3611932565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000823560de19833603018112611a0557600080fd5b9190910192915050565b6000808335601e19843603018112611a2657600080fd5b83018035915067ffffffffffffffff821115611a4157600080fd5b602001915036819003821315611a5657600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b601f82111561078b57600081815260208120601f850160051c81016020861015611a9a5750805b601f850160051c820191505b81811015610e2d57828155600101611aa6565b67ffffffffffffffff831115611ad157611ad1611a5d565b611ae583611adf83546118e2565b83611a73565b6000601f841160018114611b195760008515611b015750838201355b600019600387901b1c1916600186901b178355611b73565b600083815260209020601f19861690835b82811015611b4a5786850135825560209485019460019092019101611b2a565b5086821015611b675760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008135611b878161186d565b92915050565b60048210611bab57634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b611bc88283611a0f565b67ffffffffffffffff811115611be057611be0611a5d565b611bf481611bee85546118e2565b85611a73565b6000601f821160018114611c285760008315611c105750838201355b600019600385901b1c1916600184901b178555611c82565b600085815260209020601f19841690835b82811015611c595786850135825560209485019460019092019101611c39565b5084821015611c765760001960f88660031b161c19848701351681555b505060018360011b0185555b50505050611c936020830183611a0f565b611ca1818360018601611ab9565b5050611cbb611cb260408401611b7a565b60028301611b8d565b606082013560038201556080820135600482015560a0820135600582015560c082013560068201555050565b600082821015611cf957611cf9611932565b500390565b600060208284031215611d1057600080fd5b8151801515811461126b57600080fd5b60008251611a0581846020870161167a565b60208152600061126b60208301846116a656fea26469706673582212202e1509c42b821a7662dccecaca94a1920ee08a0e4029c5107c2c6a0296437c3864736f6c634300080f0033";

export class BetMag__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    token_: string,
    betFee_: BigNumberish,
    feeWallet_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BetMag> {
    return super.deploy(
      token_,
      betFee_,
      feeWallet_,
      overrides || {}
    ) as Promise<BetMag>;
  }
  getDeployTransaction(
    token_: string,
    betFee_: BigNumberish,
    feeWallet_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      betFee_,
      feeWallet_,
      overrides || {}
    );
  }
  attach(address: string): BetMag {
    return super.attach(address) as BetMag;
  }
  connect(signer: Signer): BetMag__factory {
    return super.connect(signer) as BetMag__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BetMagInterface {
    return new utils.Interface(_abi) as BetMagInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BetMag {
    return new Contract(address, _abi, signerOrProvider) as BetMag;
  }
}
